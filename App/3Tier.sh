#!/bin/bash
#
# This script setups the entire OVF machine based on properties
#

#
# Retrieve OVF settings from HOST
#
echo "- Retrieving OVF information"
OVF_ENV=/tmp/ovfenv.xml
/usr/bin/vmtoolsd --cmd "info-get guestinfo.ovfEnv" > $OVF_ENV

# Do the following ONLY if the VM is started from the vAPP
# If not from the vApp then the VM will keep its previous files settings
echo "test before if"
if [ -s $OVF_ENV ]
then

echo "test in then"
vm_ip=$(cat $OVF_ENV | grep App_IP  | cut -d '"' -f 4 | head -1)
vm_subnet=$(cat $OVF_ENV | grep App_Subnet  | cut -d '"' -f 4 | head -1)
vm_gateway=$(cat $OVF_ENV | grep App_Gateway  | cut -d '"' -f 4 | head -1)
vm_hostname=$(cat $OVF_ENV | grep App_IP  | cut -d '"' -f 2 | cut -d "_" -f 1  | head -1)
app_ip=$(cat $OVF_ENV | grep App_IP  | cut -d '"' -f 4 | head -1)
db_ip=$(cat $OVF_ENV | grep DB_IP  | cut -d '"' -f 4 | head -1)


#
# Update the hosts file to reflect the settings
#

echo "- Setting application environment"
echo "127.0.0.1         localhost" > /etc/hosts
echo "$db_ip            db-ip" >> /etc/hosts
echo "$app_ip           app-ip" >> /etc/hosts

#
# Networking settings
#
echo "- Setting networking environment"

echo $vm_hostname > /etc/hostname


# Set IP number
cat <<EOF >  /etc/systemd/network/10-static-en.network
# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces(5).

######
## This file is autogenerated by the OVF template - DH
######

[Match]
Name=eth0

[Network]
Address=$vm_ip
Gateway=$vm_gateway
EOF


systemctl restart systemd-networkd
docker rm -f $(docker ps -aq)
#docker run -v /root/www:/var/www/html/ -p 8443:80 --add-host db-ip:$db_ip -d appsrv:dockerfile
docker run -v /root/www:/var/www/html/public -p 8443:80 --add-host db-ip:$db_ip -d shin1x1/docker-php71-apache

iptables -I INPUT -j ACCEPT


fi

